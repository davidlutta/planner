{"version":3,"sources":["config/FirebaseConfig.js","components/layout/SignedInLinks.js","store/actions/AuthActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/ProjectActions.js","App.js","serviceWorker.js","store/reducers/AuthReducer.js","store/reducers/ProjectReducer.js","store/reducers/RootReducer.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","db","firestore","connect","dispatch","signOut","getState","getFirebase","auth","then","window","location","reload","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","isEmpty","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","uid","Component","compose","firestoreConnect","collection","orderBy","limit","ordered","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","getFirestore","authorId","add","Date","console","log","App","exact","path","component","ProjectDetails","Boolean","hostname","initialState","loading","AuthReducer","action","message","ProjectReducer","RootReducer","combineReducers","firestoreReducer","firebaseReducer","rrfProps","config","userProfile","useFirestoreForProfile","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","authIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b64dc353.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5Fy7-rLHkixq6FaS1UjI2_0pMiQe5HfA\",\n    authDomain: \"planner-f1df5.firebaseapp.com\",\n    databaseURL: \"https://planner-f1df5.firebaseio.com\",\n    projectId: \"planner-f1df5\",\n    storageBucket: \"planner-f1df5.appspot.com\",\n    messagingSenderId: \"64219392397\",\n    appId: \"1:64219392397:web:16f536b37d3d9faad0b5c4\",\n    measurementId: \"G-1K7Z38B7W2\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst db = firebase.firestore();\nexport {db};\nexport {firebase};\nexport default firebaseConfig;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {signOut} from \"../../store/actions/AuthActions\";\nimport {connect} from 'react-redux';\n\nconst SignedInLinks = props => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to={'/create'}>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to={'/'} className={\"btn btn-floating pink lighten-1\"}>{props.profile.initials}</NavLink></li>\n        </ul>\n    );\n};\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signOut: () => dispatch(signOut())\n    }\n};\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\n","import {db} from \"../../config/FirebaseConfig\";\n\nexport const signIn = (credentials) =>{\n    return(dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err)=>{\n            dispatch({type: 'LOGIN_ERROR', err});\n        });\n    }\n};\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            window.location.reload();\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        });\n    }\n};\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return db.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            }).then(() => {\n                dispatch({type: 'SIGNUP_SUCCESS'});\n            }).catch((err) => {\n                dispatch({type:'SIGNUP_ERROR',err})\n            });\n        });\n    };\n};\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n    return (\n            <ul className=\"right\">\n                <li><NavLink to={'/signup'}>Sign Up</NavLink></li>\n                <li><NavLink to={'/signin'}>Log In</NavLink></li>\n            </ul>\n    );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport {connect} from \"react-redux\";\nconst Navbar = (props) =>{\n    const {auth, profile} = props;\n    if (!auth) {\n        return (\n            <nav className=\"nav-wrapper grey darken-2\">\n                <div className=\"container\">\n                    <Link to={'/'} className={\"brand-logo\"}>Planner</Link>\n                    <SignedInLinks profile={profile}/>\n                </div>\n            </nav>\n        );\n    }else {\n        return (\n            <nav className=\"nav-wrapper grey darken-2\">\n                <div className=\"container\">\n                    <Link to={'/'} className={\"brand-logo\"}>Planner</Link>\n                    <SignedOutLinks/>\n                </div>\n            </nav>\n        );\n    }\n};\nconst mapStateToProps = (state) =>{\n    return {\n        auth: state.firebase.auth.isEmpty,\n        profile: state.firebase.profile\n    };\n};\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-1\">\n                <div className=\"card-content\"><span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map((notification) => {\n                            return (\n                                <li key={notification.id}>\n                                    <span className=\"pink-text\">{notification.user}</span> <span>{notification.content}</span>\n                                    <div\n                                        className=\"grey-text note-date\">{moment(notification.time.toDate()).fromNow()}</div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from \"moment\";\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from \"./ProjectSummary\";\nimport {Link} from \"react-router-dom\";\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className={\"project-list section\"}>\n            {/* the reason we have projects && is to check whether there are projects existing*/}\n            { projects && projects.map(project => {\n                return (\n                    //The Key should always be on the parent element\n                    <Link to={'/project/'+project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ProjectList;\n","import React, {Component} from 'react';\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {compose} from \"redux\";\nimport {Redirect} from 'react-router-dom';\nclass Dashboard extends Component {\n    render() {\n        const {projects,auth,notifications} = this.props;\n        if (!auth.uid) {\n            return <Redirect to={'/signin'}/>;\n        }\n        return (\n            <div className={\"dashboard container\"}>\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) =>{\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n};\nexport default compose(\n    firestoreConnect([{collection:'projects',orderBy: ['createdAt', 'desc']},{collection:'notifications', limit:3, orderBy: ['time', 'desc']}]),\n    connect(mapStateToProps)\n)(Dashboard);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {Redirect} from 'react-router-dom';\nimport moment from \"moment\";\nconst ProjectDetails = (props) => {\n    const {project, auth} = props;\n    if (!auth.uid) return <Redirect to={'/signin'}/>;\n    if (project) {\n        return (\n            <div className={\"container section project-details\"}>\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Created By: {project.authorFirstName +\" \" +project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className={\"container center\"}><h3>Loading...</h3></div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    const id = props.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n};\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(['projects'])\n)(ProjectDetails);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {signIn} from \"../../store/actions/AuthActions\";\nimport {Redirect} from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n        // this.props.history.push('/');\n    };\n\n    render() {\n        const {authError, auth} = this.props;\n        if (auth.uid) return <Redirect to={'/'}/>;\n        return (\n            <div className={\"container\"}>\n                <form className=\"card white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {signUp} from \"../../store/actions/AuthActions\";\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    };\n\n    render() {\n        const {auth, authError} = this.props;\n        if (auth.uid) return <Redirect to={'/'}/>\n        return (\n            <div className={\"container\"}>\n                <form className=\"card white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth:state.firebase.auth,\n        authError: state.auth.authError\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {createProject} from \"../../store/actions/ProjectActions\";\nimport {Redirect} from 'react-router-dom';\nclass CreateProject extends Component {\n    state = {\n        title:'',\n        content:''\n    };\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.setState({\n            title:'',\n            content:''\n        });\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {auth} = this.props;\n        if (!auth.uid) return <Redirect to={'/signin'}/>;\n        return (\n            <div className={\"container\"}>\n                <form className=\"card white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n};\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n        //async call to db after pausing dispatch\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project, // this spreads the properties eg title: ---- and content: ---\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project: project\n            });\n        }).catch((err) => {\n            console.log(err);\n            dispatch({\n                type:'CREATE_PROJECT_ERROR',\n                err\n            });\n        });\n    };\n};\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport NavBar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <NavBar/>\n                    <Switch>\n                        <Route exact path={'/'} component={Dashboard}/>\n                        <Route path={\"/project/:id\"} component={ProjectDetails}/>\n                        <Route path={'/signIn'} component={SignIn}/>\n                        <Route path={'/signUp'} component={SignUp}/>\n                        <Route path={'/create'} component={CreateProject}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loading:true,\n    authError: null,\n    user:null\n};\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('Login success ',action.err);\n            return {\n                ...state,\n                authError: 'Login Failed',\n                loading: false\n            };\n        case 'LOGIN_SUCCESS':\n            console.log('Login Success');\n            return {\n                ...state,\n                authError: null,\n                loading: false\n            };\n        case 'SIGNOUT_SUCCESS':\n            console.log('Sign out Success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('SignUp Success');\n            return {\n                ...state,\n                loading: false,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log(\"SignUp Error\");\n            return {\n                ...state,\n                loading: false,\n                authError: action.err.message\n            };\n        default:\n            return state\n    }\n};\nexport default AuthReducer;\n","const initialState = {\n    projects: [\n        {id: '1', title: 'Buy guns', content: 'I Will go buy a bunch of powerful weapons'},\n        {id: '2', title: 'Sell guns', content: 'I will sell the weapons to the highest bidders'},\n        {id: '3', title: 'Make 1 billion dollars', content: 'I will make 1 billion Dollars'},\n        {id: '4', title: 'Live Life', content: 'I will enjoy the money'}\n    ]\n};\n\nconst ProjectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('Created Project');\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('CREATE PROJECT ERROR: ', action.err);\n            return state;\n        default:\n            return state;\n    }\n};\nexport default ProjectReducer;\n","import AuthReducer from \"./AuthReducer\";\nimport ProjectReducer from \"./ProjectReducer\";\nimport {combineReducers} from 'redux';\nimport {firestoreReducer} from \"redux-firestore\";\nimport {firebaseReducer} from \"react-redux-firebase\";\n\nconst RootReducer = combineReducers({\n    auth: AuthReducer,\n    project: ProjectReducer,\n    firestore: firestoreReducer, // will receive the data for us\n    firebase: firebaseReducer // will sync our firebase auth state\n});\n\nexport default RootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport RootReducer from \"./store/reducers/RootReducer\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore} from \"redux-firestore\";\nimport {reactReduxFirebase, getFirebase, authIsReady} from \"react-redux-firebase\";\nimport {firebase} from \"./config/FirebaseConfig\";\nimport firebaseConfig from \"./config/FirebaseConfig\";\n\nconst rrfProps = {\n    config:firebaseConfig,\n    userProfile:'users',\n    useFirestoreForProfile: true,\n};\nfirebase.firestore();\nlet store = createStore(RootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase, firebaseConfig), //store enhancers to connect to our project\n        reactReduxFirebase(firebase,rrfProps)\n    ));\nauthIsReady(store).then(() => {\n    ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}